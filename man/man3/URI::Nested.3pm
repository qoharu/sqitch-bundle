.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "URI::Nested 3"
.TH URI::Nested 3 "2021-09-02" "perl v5.30.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "Name"
.IX Header "Name"
URI::Nested \- Nested URIs
.SH "Synopsis"
.IX Header "Synopsis"
.Vb 5
\&  package URI::jdbc;
\&  use parent \*(AqURI::Nested\*(Aq;
\&  sub prefix       { \*(Aqjdbc\*(Aq }
\&  sub nested_class { undef  }
\&  sub subprotocol  { shift\->nested_uri\->scheme(@_) }
\&
\&  package main;
\&  my $jdbc_uri = URI\->new(\*(Aqjdbc:oracle:scott/tiger@//myhost:1521/myservicename\*(Aq);
\&  my $nested_uri = $jdbc_uri\->nested_uri;
.Ve
.SH "Description"
.IX Header "Description"
This class provides support for nested URIs, where the scheme is a prefix, and
the remainder of the \s-1URI\s0 is another \s-1URI.\s0 Examples include \s-1JDBC\s0
URIs <http://docs.oracle.com/cd/B14117_01/java.101/b10979/urls.htm#BEIJFHHB>
and database URIs <https://github.com/theory/uri-db>.
.SH "Interface"
.IX Header "Interface"
The following differences exist compared to the \f(CW\*(C`URI\*(C'\fR class interface:
.SS "Class Method"
.IX Subsection "Class Method"
\fI\f(CI\*(C`prefix\*(C'\fI\fR
.IX Subsection "prefix"
.PP
Returns the prefix to be used, which corresponds to the \s-1URI\s0's scheme. Defaults
to the last part of class name.
.PP
\fI\f(CI\*(C`nested_class\*(C'\fI\fR
.IX Subsection "nested_class"
.PP
Returns the \s-1URI\s0 subclass to use for the nested \s-1URI.\s0 If defined, the nested \s-1URI\s0
will always be coerced into this class if it is not naturally an instance of
this class or one of its subclasses.
.SS "Constructors"
.IX Subsection "Constructors"
\fI\f(CI\*(C`new\*(C'\fI\fR
.IX Subsection "new"
.PP
.Vb 2
\&  my $uri = URI::Nested\->new($string);
\&  my $uri = URI::Nested\->new($string, $base);
.Ve
.PP
Always returns a URI::Nested object. \f(CW$base\fR may be another \s-1URI\s0 object or
string. Unlike in \s-1URI\s0's \f(CW\*(C`new()\*(C'\fR, schemes will always be applied to the \s-1URI\s0
and the nested \s-1URI\s0 if they does not already schemes. And if \f(CW\*(C`nested_class\*(C'\fR is
defined, the nested \s-1URI\s0 will be coerced into that class.
.SS "Accessors"
.IX Subsection "Accessors"
\fI\f(CI\*(C`scheme\*(C'\fI\fR
.IX Subsection "scheme"
.PP
.Vb 2
\&  my $scheme = $uri\->scheme;
\&  $uri\->scheme( $new_scheme );
.Ve
.PP
Gets or sets the scheme part of the \s-1URI.\s0 When setting the scheme, it must
always be the same as the value returned by \f(CW\*(C`prefix\*(C'\fR or an exception will be
thrown \*(-- although the letter casing may vary. The returned value is always
lowercase.
.PP
\fI\f(CI\*(C`nested_uri\*(C'\fI\fR
.IX Subsection "nested_uri"
.PP
.Vb 1
\&  my $nested_uri = $uri\->nested_uri;
.Ve
.PP
Returns the nested \s-1URI.\s0
.SS "Instance Methods"
.IX Subsection "Instance Methods"
\fI\f(CI\*(C`abs\*(C'\fI\fR
.IX Subsection "abs"
.PP
.Vb 1
\&  my $abs = $uri\->abs( $base_uri );
.Ve
.PP
Returns the URI::Nested object itself. Unlike \s-1URI\s0's \f(CW\*(C`abs()\*(C'\fR,
\&\f(CW$URI::ABS_ALLOW_RELATIVE_SCHEME\fR is ignored.
.PP
\fI\f(CI\*(C`rel\*(C'\fI\fR
.IX Subsection "rel"
.PP
.Vb 1
\&  my $rel = $uri\->rel( $base_uri );
.Ve
.PP
Returns the URI::Nested object itself.
.SH "Support"
.IX Header "Support"
This module is stored in an open
GitHub repository <http://github.com/theory/uri-db/>. Feel free to fork and
contribute!
.PP
Please file bug reports via
GitHub Issues <http://github.com/theory/uri-db/issues/> or by sending mail to
bug\-URI\-db@rt.cpan.org <mailto:bug-URI-db@rt.cpan.org>.
.SH "Author"
.IX Header "Author"
David E. Wheeler <david@justatheory.com>
.SH "Copyright and License"
.IX Header "Copyright and License"
Copyright (c) 2013 David E. Wheeler. Some Rights Reserved.
.PP
This module is free software; you can redistribute it and/or modify it under
the same terms as Perl itself.

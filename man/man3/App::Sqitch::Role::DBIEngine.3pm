.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "App::Sqitch::Role::DBIEngine 3"
.TH App::Sqitch::Role::DBIEngine 3 "2021-09-02" "perl v5.30.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "Name"
.IX Header "Name"
App::Sqitch::Command::checkout \- An engine based on the \s-1DBI\s0
.SH "Synopsis"
.IX Header "Synopsis"
.Vb 3
\&  package App::Sqitch::Engine::sqlite;
\&  extends \*(AqApp::Sqitch::Engine\*(Aq;
\&  with \*(AqApp::Sqitch::Role::DBIEngine\*(Aq;
.Ve
.SH "Description"
.IX Header "Description"
This role encapsulates the common attributes and methods required by
DBI-powered engines.
.SH "Interface"
.IX Header "Interface"
.SS "Instance Methods"
.IX Subsection "Instance Methods"
\fI\f(CI\*(C`earliest_change_id\*(C'\fI\fR
.IX Subsection "earliest_change_id"
.PP
\fI\f(CI\*(C`latest_change_id\*(C'\fI\fR
.IX Subsection "latest_change_id"
.PP
\fI\f(CI\*(C`current_state\*(C'\fI\fR
.IX Subsection "current_state"
.PP
\fI\f(CI\*(C`current_changes\*(C'\fI\fR
.IX Subsection "current_changes"
.PP
\fI\f(CI\*(C`current_tags\*(C'\fI\fR
.IX Subsection "current_tags"
.PP
\fI\f(CI\*(C`search_events\*(C'\fI\fR
.IX Subsection "search_events"
.PP
\fI\f(CI\*(C`registered_projects\*(C'\fI\fR
.IX Subsection "registered_projects"
.PP
\fI\f(CI\*(C`register_project\*(C'\fI\fR
.IX Subsection "register_project"
.PP
\fI\f(CI\*(C`is_deployed_change\*(C'\fI\fR
.IX Subsection "is_deployed_change"
.PP
\fI\f(CI\*(C`are_deployed_changes\*(C'\fI\fR
.IX Subsection "are_deployed_changes"
.PP
\fI\f(CI\*(C`log_deploy_change\*(C'\fI\fR
.IX Subsection "log_deploy_change"
.PP
\fI\f(CI\*(C`log_fail_change\*(C'\fI\fR
.IX Subsection "log_fail_change"
.PP
\fI\f(CI\*(C`changes_requiring_change\*(C'\fI\fR
.IX Subsection "changes_requiring_change"
.PP
\fI\f(CI\*(C`name_for_change_id\*(C'\fI\fR
.IX Subsection "name_for_change_id"
.PP
\fI\f(CI\*(C`log_new_tags\*(C'\fI\fR
.IX Subsection "log_new_tags"
.PP
\fI\f(CI\*(C`log_revert_change\*(C'\fI\fR
.IX Subsection "log_revert_change"
.PP
\fI\f(CI\*(C`begin_work\*(C'\fI\fR
.IX Subsection "begin_work"
.PP
\fI\f(CI\*(C`finish_work\*(C'\fI\fR
.IX Subsection "finish_work"
.PP
\fI\f(CI\*(C`rollback_work\*(C'\fI\fR
.IX Subsection "rollback_work"
.PP
\fI\f(CI\*(C`is_deployed_tag\*(C'\fI\fR
.IX Subsection "is_deployed_tag"
.PP
\fI\f(CI\*(C`deployed_changes\*(C'\fI\fR
.IX Subsection "deployed_changes"
.PP
\fI\f(CI\*(C`deployed_changes_since\*(C'\fI\fR
.IX Subsection "deployed_changes_since"
.PP
\fI\f(CI\*(C`load_change\*(C'\fI\fR
.IX Subsection "load_change"
.PP
\fI\f(CI\*(C`change_offset_from_id\*(C'\fI\fR
.IX Subsection "change_offset_from_id"
.PP
\fI\f(CI\*(C`change_id_offset_from_id\*(C'\fI\fR
.IX Subsection "change_id_offset_from_id"
.PP
\fI\f(CI\*(C`change_id_for\*(C'\fI\fR
.IX Subsection "change_id_for"
.PP
\fI\f(CI\*(C`registry_version\*(C'\fI\fR
.IX Subsection "registry_version"
.SH "See Also"
.IX Header "See Also"
.IP "App::Sqitch::Engine::pg" 4
.IX Item "App::Sqitch::Engine::pg"
The PostgreSQL engine.
.IP "App::Sqitch::Engine::sqlite" 4
.IX Item "App::Sqitch::Engine::sqlite"
The SQLite engine.
.IP "App::Sqitch::Engine::oracle" 4
.IX Item "App::Sqitch::Engine::oracle"
The Oracle engine.
.IP "App::Sqitch::Engine::mysql" 4
.IX Item "App::Sqitch::Engine::mysql"
The MySQL engine.
.IP "App::Sqitch::Engine::vertica" 4
.IX Item "App::Sqitch::Engine::vertica"
The Vertica engine.
.IP "App::Sqitch::Engine::exasol" 4
.IX Item "App::Sqitch::Engine::exasol"
The Exasol engine.
.IP "App::Sqitch::Engine::snowflake" 4
.IX Item "App::Sqitch::Engine::snowflake"
The Snowflake engine.
.SH "Author"
.IX Header "Author"
David E. Wheeler <david@justatheory.com>
.SH "License"
.IX Header "License"
Copyright (c) 2012\-2020 iovation Inc.
.PP
Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the \*(L"Software\*(R"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:
.PP
The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.
.PP
\&\s-1THE SOFTWARE IS PROVIDED \*(L"AS IS\*(R", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.\s0
